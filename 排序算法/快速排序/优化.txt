初始的快速排序在对完全有序的数组排序时，时间复杂度是O(n^2)级别的
因为每次都选取的第一个元素，他后面的元素都是有序的，所以第一次循环n次，第二次循环n-1次，一直循环到1次
所以我们可以不选第一个元素，而是随机选择一个，然后将他与第一个元素替换位置，继续进行和之前一样的操作

快速排序还有个问题，就是在对所有元素都相同的数组排序时，会造成性能退化
可以想象，当数组内元素都相同时，每次partition返回的都是当前的第一位，
所以就相当于对完全有序的数组排序一样的逻辑了（可以自己模拟）,就是第一次循环n次，第二次循环n-1次，一直循环到1次
所以我们需要将这些元素平均分散到两边，而不是堆在一边（堆在一边的后果就是第一次循环n次，第二次循环n-1次，一直循环到1次），这就是双路排序
当全都是相同元素的数组进行双路排序时，会将元素分为两部分，两部分都是相同的元素，然后继续这一步不停的递归，实际上是不需要了
所以引入三路排序算法，将中间相同的元素标注出来，这部分就不参与下次递归的排序了